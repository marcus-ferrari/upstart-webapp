{"ast":null,"code":"var _jsxFileName = \"C:\\\\technical-test-react\\\\upstart-web\\\\src\\\\components\\\\ForecastCard.js\";\nimport React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport \"../css/forecast-card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastCard(_ref) {\n  let {\n    forecast\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // <Card className=\"card\" sx={{ maxWidth: 300 }}>\n    //   <div>\n    //   <Typography gutterBottom variant=\"h5\" component=\"div\">\n    //       {forecast.temperature}\n    //     </Typography>\n    //   <CardMedia\n    //     component=\"img\"\n    //     height=\"180\"\n    //     image={forecast.icon}\n    //   />\n    //   </div>\n    //   <CardContent>\n    //     <Typography variant=\"body2\" color=\"text.secondary\">\n    //       {forecast.shortForecast}\n    //     </Typography>\n    //     <Typography variant=\"body2\" color=\"text.secondary\">\n    //       Wind Speed: {forecast.windSpeed}\n    //     </Typography>\n    //   </CardContent>\n    // </Card>\n    _jsxDEV(Card, {\n      sx: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            flex: \"1 0 auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            variant: \"h5\",\n            children: forecast.temperature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"text.secondary\",\n            component: \"div\",\n            children: forecast.shortForecast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"text.secondary\",\n            component: \"div\",\n            children: [\"Wind Speed: \", forecast.windSpeed]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            alignItems: \"center\",\n            pl: 1,\n            pb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"previous\",\n            children: theme.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(SkipNextIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(SkipPreviousIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"play/pause\",\n            children: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n              sx: {\n                height: 38,\n                width: 38\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"next\",\n            children: theme.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(SkipPreviousIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(SkipNextIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        sx: {\n          width: 151\n        },\n        image: forecast.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = ForecastCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastCard\");","map":{"version":3,"sources":["C:/technical-test-react/upstart-web/src/components/ForecastCard.js"],"names":["React","Card","CardContent","CardMedia","Typography","ForecastCard","forecast","display","flexDirection","flex","temperature","shortForecast","windSpeed","alignItems","pl","pb","theme","direction","height","width","icon"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport \"../css/forecast-card.css\";\r\n\r\nexport default function ForecastCard({ forecast }) {\r\n  return (\r\n    // <Card className=\"card\" sx={{ maxWidth: 300 }}>\r\n    //   <div>\r\n    //   <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n    //       {forecast.temperature}\r\n    //     </Typography>\r\n\r\n    //   <CardMedia\r\n    //     component=\"img\"\r\n    //     height=\"180\"\r\n    //     image={forecast.icon}\r\n    //   />\r\n    //   </div>\r\n    //   <CardContent>\r\n    //     <Typography variant=\"body2\" color=\"text.secondary\">\r\n    //       {forecast.shortForecast}\r\n    //     </Typography>\r\n    //     <Typography variant=\"body2\" color=\"text.secondary\">\r\n    //       Wind Speed: {forecast.windSpeed}\r\n    //     </Typography>\r\n    //   </CardContent>\r\n    // </Card>\r\n\r\n    <Card sx={{ display: \"flex\" }}>\r\n      <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <CardContent sx={{ flex: \"1 0 auto\" }}>\r\n          <Typography component=\"div\" variant=\"h5\">\r\n          {forecast.temperature}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            color=\"text.secondary\"\r\n            component=\"div\"\r\n          >\r\n             {forecast.shortForecast}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            color=\"text.secondary\"\r\n            component=\"div\"\r\n          >\r\n              Wind Speed: {forecast.windSpeed}\r\n          </Typography>\r\n        </CardContent>\r\n        <Box sx={{ display: \"flex\", alignItems: \"center\", pl: 1, pb: 1 }}>\r\n          <IconButton aria-label=\"previous\">\r\n            {theme.direction === \"rtl\" ? (\r\n              <SkipNextIcon />\r\n            ) : (\r\n              <SkipPreviousIcon />\r\n            )}\r\n          </IconButton>\r\n          <IconButton aria-label=\"play/pause\">\r\n            <PlayArrowIcon sx={{ height: 38, width: 38 }} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"next\">\r\n            {theme.direction === \"rtl\" ? (\r\n              <SkipPreviousIcon />\r\n            ) : (\r\n              <SkipNextIcon />\r\n            )}\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n      <CardMedia\r\n        component=\"img\"\r\n        sx={{ width: 151 }}\r\n        image={forecast.icon}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}